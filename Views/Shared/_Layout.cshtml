<!DOCTYPE html>
<html lang="en">
<head>

    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>@ViewData["Title"]</title>

    <!-- Early dark mode application to prevent flickering -->
    <script>
        (function() {
            const darkMode = localStorage.getItem('darkMode');
            if (darkMode === 'enabled') {
                document.documentElement.classList.add('dark-mode'); // Add dark mode class to the root element
            }
        })();
    </script>

    <link rel="manifest" href="/manifest.json" />
    <link rel="stylesheet" href="~/lib/bootstrap/dist/css/bootstrap.min.css" />
    <link rel="stylesheet" href="~/css/site.css" asp-append-version="true" />
    <link rel="stylesheet" href="~/vladi.revolution.styles.css" asp-append-version="true" />
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.3.0/font/bootstrap-icons.css" />
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css" />

    <style>
        /* Default (light mode) colors */
        :root {
            --text-color: #000000;
            --background-color: #f5f5f5;
            --navbar-background-color: #f8f9fa; 
            --footer-background-color: #f8f9fa; 
        }

        /* Dark mode colors */
        .dark-mode {
            --text-color: #ffffff;
            --background-color: #121212;
            --navbar-background-color: #1f1f1f;
            --footer-background-color: #1f1f1f; 
        }

        /* Apply the colors to all text and background */
        body {
            background-color: var(--background-color);
            color: var(--text-color);
            transition: background-color 0.5s ease, color 0.5s ease;
        }

        /* Navbar dark mode */
        .navbar {
            background-color: var(--navbar-background-color) !important; 
            color: var(--text-color) !important;
            transition: background-color 0.5s ease, color 0.5s ease;
        }

            .navbar a {
                color: var(--text-color) !important;
            }

        /* Footer styles */
        footer {
            background-color: var(--footer-background-color);
            color: var(--text-color);
            transition: background-color 0.5s ease, color 0.5s ease;
        }

            footer .container {
                display: flex;
                justify-content: space-between;
                align-items: center;
                padding: 0 15px; 
            }

            footer a {
                color: var(--text-color);
            }

        /* Apply text color to common elements */
        h1, h2, h3, h4, h5, h6, p, a, span, div, td, th {
            color: var(--text-color);
        }

        #modeIcon {
            margin-right: 10px; 
            font-size: 1.5rem; 
            line-height: 1;
        }

        /* Toggle switch styling */
        .switch {
            position: relative;
            display: inline-block;
            width: 40px;
            height: 20px;
            margin: 5px 0;
        }

        .switch-container {
            display: flex;
            align-items: center;
            justify-content: center;
        }

            .switch input {
                opacity: 0;
                width: 0;
                height: 0;
            }

        .slider {
            position: absolute;
            cursor: pointer;
            top: 0;
            left: 0;
            right: 0;
            bottom: 0;
            background-color: #cccccc;
            transition: 0.4s;
            border-radius: 20px;
        }

            .slider:before {
                position: absolute;
                content: "";
                height: 14px;
                width: 14px;
                left: 3px;
                bottom: 3px;
                background-color: white;
                transition: 0.4s;
                border-radius: 50%;
            }

        input:checked + .slider {
            background-color: #808080;
        }

            input:checked + .slider:before {
                transform: translateX(20px);
            }
    </style>


</head>
<body>
    <header>
        <nav class="navbar navbar-expand-sm navbar-toggleable-sm border-bottom box-shadow mb-3">
            <div class="container-fluid">
                <a class="navbar-brand" asp-area="" asp-controller="Home" asp-action="Index"><i class="fa-solid fa-trophy"></i> VLADI REVOLUTION</a>
                <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target=".navbar-collapse" aria-controls="navbarSupportedContent"
                        aria-expanded="false" aria-label="Toggle navigation">
                    <span><i class="fa-solid fa-bars"></i></span>
                    <span class="ms-2 d-inline d-sm-none">Meniu</span>
                </button>
                <div class="navbar-collapse collapse d-sm-inline-flex justify-content-between">
                    <ul class="navbar-nav me-auto">
                        <li class="nav-item"><a class="nav-link" asp-controller="Players" asp-action="Index"> Jucători </a></li>
                        <li class="nav-item"><a class="nav-link" asp-controller="Matches" asp-action="Index"> Meciuri </a></li>
                        <li class="nav-item dropdown">
                            <a class="nav-link dropdown-toggle" href="#" id="navbarDropdown" role="button" aria-haspopup="true" aria-expanded="false">
                                <i class="fa-solid fa-gear"></i> Management
                            </a>
                            <div class="dropdown-menu" aria-labelledby="navbarDropdown">
                                <a class="dropdown-item" href="#">Item 1</a>
                                <a class="dropdown-item" href="#">Item 2</a>
                                <a class="dropdown-item" href="#">Item 3</a>
                            </div>
                        </li>
                    </ul>
                    <partial name="_Identity" />
                </div>
            </div>
        </nav>
    </header>

    <div class="container">
        <main role="main" class="pb-3">
            @RenderBody()
        </main>
    </div>

    <footer class="border-top footer text-muted">
        <div class="container d-flex justify-content-between align-items-center">
            <div class="copyright">
                &copy; 2024 - VLADI REVOLUTION
            </div>
            <div class="switch-container d-flex align-items-center">
                <span id="modeIcon">
                    <i class="bi bi-brightness-high"></i>
                </span>
                <label class="switch">
                    <input type="checkbox" id="darkModeToggle" onclick="toggleDarkMode()">
                    <span class="slider"></span>
                </label>
            </div>
        </div>
    </footer>

    <script src="~/lib/jquery/dist/jquery.min.js"></script>
    <script src="~/lib/bootstrap/dist/js/bootstrap.bundle.min.js"></script>
    <script src="~/js/site.js" asp-append-version="true"></script>

    <script>
        function toggleDarkMode() {
            document.documentElement.classList.toggle('dark-mode');
            const isDarkMode = document.documentElement.classList.contains('dark-mode');
            localStorage.setItem('darkMode', isDarkMode ? 'enabled' : 'disabled');
            updateModeIcon(isDarkMode);
        }

        function updateModeIcon(isDarkMode) {
            const modeIcon = document.getElementById('modeIcon');
            if (isDarkMode) {
                modeIcon.innerHTML = '<i class="fas fa-moon"></i>'; 
            } else {
                modeIcon.innerHTML = '<i class="bi bi-brightness-high"></i>'; 
            }
        }

        window.onload = function () {
            const darkModeToggle = document.getElementById('darkModeToggle');
            const darkMode = localStorage.getItem('darkMode');
            const isDarkMode = (darkMode === 'enabled');

            if (isDarkMode) {
                document.documentElement.classList.add('dark-mode');
                darkModeToggle.checked = true;
            } else {
                darkModeToggle.checked = false;
            }

            // Set the correct icon on page load
            updateModeIcon(isDarkMode);
        };
    </script>



    @await RenderSectionAsync("Scripts", required: false)
</body>
</html>
